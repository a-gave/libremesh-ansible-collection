---

# - name: execute
#   shell:
#     cmd: "lua {{ role_path }}/files/utils.lua {{ default_hostname }} {{ default_mac }}"
#   register: ip_host

- name: 0.1 - Assert mandatory variables are defined
  ansible.builtin.assert:
    that: 
      - libremesh_version is defined
      - openwrt_version is defined
      - libremesh_community is defined
      - libremesh_community_recipe is defined
    msg: "Mandatory variables are undefined"

- name: 0.2 - Ensure host_vars dir exist
  file:
    path: "host_vars"
    state: directory

- name: 0.3 - Ensure lime-mac dir exist
  file:
    path: "lime-mac"
    state: directory

- name: 0.4 - Include Community main variables
  ansible.builtin.include_vars:
    file: "{{libremesh_community_main_vars}}"
  vars:
    libremesh_community_main_vars: "community/libremesh_{{libremesh_version}}/openwrt_{{openwrt_version}}/{{libremesh_community}}/main.yml" 

- name: 0.5 - Include Community devices variables
  ansible.builtin.include_vars:
    file: "{{libremesh_community_devices_vars}}"
  vars:
    libremesh_community_devices_vars: "community/libremesh_{{libremesh_version}}/openwrt_{{openwrt_version}}/{{libremesh_community}}/{{libremesh_community_recipe}}.yml" 

- name: 0.6 - Filter target_subtarget
  ansible.builtin.include_tasks: 0_filter_device.yml
  vars:
    devices: "{{ build_target.openwrt_devices }}"
    openwrt_target: "{{ build_target.openwrt_target }}"
    openwrt_subtarget: "{{ build_target.openwrt_subtarget }}"
  loop: "{{ libremesh_devices }}"
  loop_control:
    loop_var: build_target

- name: Flush handlers
  meta: flush_handlers

