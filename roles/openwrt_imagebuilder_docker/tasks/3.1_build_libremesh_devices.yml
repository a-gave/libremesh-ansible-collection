---
- name: 3.1.0 - Apply device specific configs
  ansible.builtin.include_tasks: 3.0_configure.yml  
  when: openwrt_device.configs is defined

- name: Ensure output dir exists
  ansible.builtin.shell: 
    cmd: docker exec -u root {{ openwrt_imagebuilder_docker_container }} sh -c 
      "mkdir -p /images/{{ openwrt_imagebuilder_docker_container_bin_dir }}"

- name: Adjust permissions
  ansible.builtin.shell: 
    cmd: docker exec -u root {{ openwrt_imagebuilder_docker_container }} sh -c 
      "chown -R {{ openwrt_imagebuilder_docker_user }}:{{ openwrt_imagebuilder_docker_user}} /files/ /images/
      {% if (libremesh_local_packages != []) %} /local_packages/ {% endif %}"

- name: Debug output dir
  debug:
    msg: "/images/{{ openwrt_imagebuilder_docker_container_bin_dir }}"

- name: 3.1.1 - Build LibreMesh {{ libremesh_version }} {{ openwrt_target }}_{{ openwrt_subtarget }}_{{ openwrt_device.name }}
  ansible.builtin.shell: 
    cmd: docker exec {{ openwrt_imagebuilder_docker_container }} sh -c 
      "make image PROFILE='{{ openwrt_device.name }}'
      PACKAGES='{{ libremesh_version_packages_list | default('') }} 
        {{ libremesh_target_subtarget_packages_list | default('') }} 
        {{ libremesh_devices_packages_list | default('') }}
        {{ libremesh_community_file_target_subtarget_packages_list | default('') }}'
      BIN_DIR='/images/targets/{{ openwrt_target }}_{{ openwrt_subtarget }}' 
      FILES='/files/'
      EXTRA_IMAGE_NAME='{{ extra_image_name | default('') }}'"

- name: 3.1.2 - Build LibreMesh {{ openwrt_device.name }} lime-mac
  include_tasks: 3.2_loop_lime_mac.yml
  when: not skip_build_lime_mac and openwrt_device.lime_mac is defined