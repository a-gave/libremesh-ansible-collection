---
- name: "[Warn] Stop and remove all existing openwrt-imagebuilder-docker containers and their's volumes"
  ansible.builtin.shell:
    cmd: docker ps -a | grep "openwrt\/imagebuilder" &> /dev/null &&
      docker stop $(docker ps -a | grep "openwrt\/imagebuilder" | awk '{print $1}') &&
      docker rm -vf $(docker ps -a | grep "openwrt\/imagebuilder" | awk '{print $1}') 
  ignore_errors: true

- name: Ensure output dir for images exists
  file:
    path: "{{ openwrt_imagebuilder_docker_bin_dir }}"
    state: directory

- name: Ensure additional files path exists
  file:
    path: "{{ openwrt_imagebuilder_docker_files_dir }}"
    state: directory

- name: Ensure configs dir exist
  become: yes
  become_user: root
  file:
    path: "{{ openwrt_imagebuilder_docker_config_dir }}"
    state: "{{ item }}"
  with_items:
    - absent
    - directory

- name: Pull docker image
  ansible.builtin.shell: 
    cmd: docker pull {{ openwrt_imagebuilder_docker_image }}

- name: Start docker container {{ openwrt_imagebuilder_docker_container }}
  ansible.builtin.shell: 
    cmd: docker run --name {{ openwrt_imagebuilder_docker_container }} -it -d  
      -v "{{ openwrt_imagebuilder_docker_files_dir }}:/files/" 
      -v "{{ openwrt_imagebuilder_docker_bin_dir }}:/images/" {% if libremesh_local_packages != [] %} 
      -v "{{ openwrt_sdk_path }}/bin/packages/x86_64/profiles/:/local_packages/profiles/" {% endif %}
      --mount type=volume,dst={{ openwrt_imagebuilder_docker_container_workdir }},volume-driver=local,volume-opt=type=none,volume-opt=o=bind,volume-opt=device={{ openwrt_imagebuilder_docker_config_dir }} {{ openwrt_imagebuilder_docker_image }}

- name: Add Libremesh Feeds of lime-packages in repositories.conf and add libremesh.org public key
  ansible.builtin.shell: 
    cmd: docker exec {{ openwrt_imagebuilder_docker_container }} sh -c 
      "echo 'src/gz libremesh https://feed.libremesh.org/{{ libremesh_version }}' >> repositories.conf 
      && mkdir keys/
      ; echo 'untrusted comment signed by libremesh.org key a71b3c8285abd28b' > keys/a71b3c8285abd28b 
      && echo 'RWSnGzyChavSiyQ+vLk3x7F0NqcLa4kKyXCdriThMhO78ldHgxGljM/8' >> keys/a71b3c8285abd28b"

- name: Add Libremesh Feeds of network-profiles in repositories.conf
  ansible.builtin.shell: 
    cmd: docker exec {{ openwrt_imagebuilder_docker_container }} sh -c 
      "echo 'src/gz profiles https://feed.libremesh.org/profiles' >> repositories.conf"
  when: libremesh_local_packages == []

## local packages
- name: register
  ansible.builtin.shell:
    cmd: "cat {{ openwrt_sdk_path }}/key-build.pub.id"
  register: local_packages_key_id
  when: libremesh_local_packages != []

- name: register
  ansible.builtin.shell:
    cmd: "tail -1 {{ openwrt_sdk_path }}/key-build.pub"
  register: local_packages_key_pub
  when: libremesh_local_packages != []

- name: register fact local_packages key
  ansible.builtin.set_fact: 
    local_packages_key_id: "{{ local_packages_key_id.stdout }}"
    local_packages_key_pub: "{{ local_packages_key_pub.stdout }}"
  when: libremesh_local_packages != []

- name: Add feeds of local_packages in repositories.conf and add local key
  ansible.builtin.shell: 
    cmd: docker exec {{ openwrt_imagebuilder_docker_container }} sh -c 
      "echo 'src/gz local_packages file:/local_packages/profiles' >> repositories.conf
      && echo 'untrusted comment signed by local_key {{ local_packages_key_id }}' > keys/{{ local_packages_key_id }} 
      && echo '{{ local_packages_key_pub }}' >> keys/{{ local_packages_key_id }}"
  when: libremesh_local_packages != []
  ignore_errors: true

- name: Append VERSION_DIST and VERSION_NUMBER to .config
  ansible.builtin.shell: 
    cmd: docker exec {{ openwrt_imagebuilder_docker_container }} sh -c 
      "echo 'CONFIG_VERSION_DIST={{ version_dist }}' >> .config
      && echo 'CONFIG_VERSION_NUMBER={{ version_number }}' >> .config"

- name: Ensure output dir exists
  ansible.builtin.shell: 
    cmd: docker exec -u root {{ openwrt_imagebuilder_docker_container }} sh -c 
      "mkdir -p /images/{{ openwrt_imagebuilder_docker_container_bin_dir }}"

- name: Adjust permissions
  ansible.builtin.shell: 
    cmd: docker exec -u root {{ openwrt_imagebuilder_docker_container }} sh -c 
      "chown -R {{ openwrt_imagebuilder_docker_user }}:{{ openwrt_imagebuilder_docker_user}} /files/ /images/
      {% if (libremesh_local_packages != []) %} /local_packages/ {% endif %}"

- name: Debug output dir
  debug:
    msg: "/images/{{ openwrt_imagebuilder_docker_container_bin_dir }}"
